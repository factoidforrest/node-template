

objectAssign = require('object-assign')

hooksCreated = false

module.exports.createHooks = (params) ->
	unless hooksCreated
		before (done) ->
			module.exports.createUser params, done
			registeredDestroyHook = true


module.exports.createUser = (params, done) ->
	params ?= {}
	userProperties = 
		email: 'light24bulbs@gmail.com'
		last_name: 'testLast'
		first_name: 'testFirst'
	objectAssign userProperties, params
	User.forge(userProperties).save().then (user) ->
		console.log('created user with properties: ', user.attributes)
		user.set('confirmation_token', null)
		#need to do this in it's own step so it doesn't trigger password confirmation via email
		user.setPassword 'secretpassword', ->
			user.save().then (user) ->
				#console.log('created user for testing:', user)
				done()
 
module.exports.manuallyDestroyUser = (done) ->


module.exports.getUser = () ->
	User.where(email: 'light24bulbs@gmail.com').fetch()

###
module.exports.getUser = function getUser(params, cb){

	User.findOne({first_name: 'testFirst'}).exec(function(err, user){
		if(JSON.stringify(params) !== JSON.stringify({})) {
			return cb(err, user)
		} else {
			//modify the user using the params, save the user, and return it
		}

	});
}

###

# ---
# generated by js2coffee 2.0.0